generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(cuid())
  email            String   @unique
  username         String   @unique
  name             String?
  imageUrl         String?
  analyticsOptOut  Boolean  @default(false)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  profile   Profile?
  links     Link[]
  domains   Domain[]
}

model Profile {
  id        String   @id @default(cuid())
  bio       String?
  avatarUrl String?
  user      User     @relation(fields: [userId], references: [id])
  userId    String   @unique
}

model Link {
  id            String   @id @default(cuid())
  title         String
  url           String
  isActive      Boolean  @default(true)
  order         Int      @default(0)
  flagged       Boolean  @default(false)
  flaggedReason String?
  createdAt     DateTime @default(now())
  user          User     @relation(fields: [userId], references: [id])
  userId        String

  clickAnalytics ClickAnalytics[]
}

model ClickAnalytics {
  id        String   @id @default(cuid())
  linkId    String
  ip        String?
  country   String?
  userAgent String?
  referrer  String?
  createdAt DateTime @default(now())
  
  link      Link     @relation(fields: [linkId], references: [id], onDelete: Cascade)
}

model Domain {
  id                 String    @id @default(cuid())
  domain             String    @unique
  userId             String
  status             String    @default("PENDING") // PENDING, VERIFIED, FAILED
  verificationToken  String?
  verifiedAt         DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

